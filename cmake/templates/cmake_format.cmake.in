set( FILE_LIST

@CM_ALL_SOURCE_FILES@
)

if( NOT DEFINED CLANG_FORMAT_EXE )
   set( CLANG_FORMAT_EXE clang-format )

   if( WIN32 )
      set( CLANG_FORMAT_EXE "C:/Program Files/LLVM/bin/clang-format.exe" )
   endif( WIN32 )
endif( NOT DEFINED CLANG_FORMAT_EXE )

execute_process(
   COMMAND "${CLANG_FORMAT_EXE}" --version
   RESULT_VARIABLE FOUND
   OUTPUT_VARIABLE VER_RAW
)

if( NOT ${FOUND} MATCHES 0 )
   message( FATAL_ERROR "unable to find clang-format" )
endif( NOT ${FOUND} MATCHES 0 )

string( REGEX MATCH "[0-9]+\\.[0-9]+\\.[0-9]+" VER "${VER_RAW}" )

if( NOT "${VER}" VERSION_EQUAL @CM_CLANG_FORMAT_VER@ )
   message( FATAL_ERROR "required clang-format version: @CM_CLANG_FORMAT_VER@ (current: ${VER})" )
endif( NOT "${VER}" VERSION_EQUAL @CM_CLANG_FORMAT_VER@ )

message( STATUS "clang-format version: ${VER}" )

set( NUM_MOD 0 )

foreach( I IN LISTS FILE_LIST )
   file( SHA256 "${I}" HASH_1 )
   execute_process( COMMAND "${CLANG_FORMAT_EXE}" -i "${I}" )
   file( SHA256 "${I}" HASH_2 )

   if( NOT HASH_1 STREQUAL HASH_2 )
      message( STATUS "Formated ${I}" )
      math( EXPR NUM_MOD "${NUM_MOD} + 1" )
   endif( NOT HASH_1 STREQUAL HASH_2 )
endforeach( I IN LISTS FILE_LIST )

list( LENGTH FILE_LIST COUNT )
message( STATUS "${NUM_MOD} of ${COUNT} files changed" )